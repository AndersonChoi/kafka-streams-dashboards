networks:
  default:
    external: true
    name: ksd

volumes:
  prometheus: {}
  grafana: {}

services:

  prometheus:
    hostname: prometheus
    container_name: ksd-prometheus
    healthcheck:
      test: wget --spider http://localhost:9090/ || exit 1
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 3
    image: prom/prometheus
    privileged: true
    # web: enable-admin-api and enable-lifecycle
    # other command options are the default (but need to be supplied in full to add the others)
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-admin-api'
      - '--web.enable-lifecycle'
    ports:
      - '9090:9090'
    volumes:
      - prometheus:/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/application_streams.json:/etc/prometheus/application_streams.json
      - ./prometheus/application_analytics.json:/etc/prometheus/application_analytics.json

  grafana:
    hostname: grafana
    image: grafana/grafana:main
#    image: grafana/grafana:8.3.3
    container_name: ksd-grafana
    healthcheck:
      test: wget --spider http://localhost:3000/ || exit 1
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 3
    depends_on:
      prometheus:
        condition: service_healthy
    ports:
      - '3000:3000'
    environment:
      GF_SECURITY_ADMIN_PASSWORD: grafana
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      #grafana-piechart-panel, grafana-worldmap-panel
      GF_INSTALL_PLUGINS: "grafana-piechart-panel"
    volumes:
      - grafana:/var/lib/grafana
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/prometheus.yml:/etc/grafana/provisioning/datasources/prometheus.yml
      - ./grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
      - ./grafana/dashboards:/var/lib/grafana/dashboards

  kowl:
    image: quay.io/cloudhut/kowl:v1.5.0
    hostname: kowl
    container_name: ksd-kowl
    volumes:
      - ./kowl/config.yaml:/etc/kowl/config.yaml
    ports:
      - "8080:8080"
    entrypoint: ./kowl --config.filepath=/etc/kowl/config.yaml
